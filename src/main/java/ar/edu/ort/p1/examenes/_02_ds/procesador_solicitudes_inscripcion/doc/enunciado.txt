Enunciado

Un conocido colegio secundario de Buenos Aires cuenta con 8 sedes y nos pide desarrollar un programa que los ayude a procesar la informacion de las solicitudes de inscripcion de los alumnos a ingresar en el proximo ciclo lectivo.

De las ocho sedes existentes, hay dos tipos: propias y tercerizadas. Todas las sedes tienen un nombre, una direccion y la cantidad siempre actualizada de vacantes disponibles por turno (maniana, mediodia, tarde o noche).

Hay una diferencia en la forma en que las sedes propias o tercerizadas mantienen y guardan las solicitudes: mientras que en las sedes propias las solicitudes son guardadas en orden descendente por promedio de notas del alumno, las sedes tercerizadas las solicitudes se guardan en el mismo orden en el cual se recibieron. Otra diferencia es que las sedes tercerizadas tienen el nombre de la institucion que la respalda.

Cada solicitud debe ser procesada en el mismo orden en que se recibio, teniendo de esta forma prioridad los primeros en anotarse. De cada una de las solicitudes a procesar conocemos la siguiente informacion:

	- Nro de solicitud: Entero
	- Alumno
	- Nombre de la sede elegida para cursar: String 
	- Turno elegido (maniana, mediodia, tarde o noche)
	- Confirmada (inicialmente en falso)

De cada uno de los posibles alumnos sabemos:

	- Numero de documento
	- Nombre 
	- Promedio de notas
	- Zona de residencia: Entero 1 a 10

Se pide:

- Dise√±ar el diagrama UML completo que resuelva el problema propuesto.

- Desarrollar en NS+ los siguientes puntos (incluyendo los metodos derivados que utilices):

A) Un metodo llamado procesarSolicitudes que para cada solicitud a procesar consulte si para la sede solicitada y el turno solicitado hay vacantes. En el caso que haya se debe confirmar la solicitud y descontar la vacante utilizada.
	Si la sede es propia, debe guardar la solicitud en una lista de espera de la sede ordenada por promedio de nota del alumno.
	Si es una sede tercerizada, debe guardarla en una lista de espera de la sede en el mismo orden que se proceso.
	
Al finalizar este proceso, quedaran en la estructura original solo las solicitudes que no fueron confirmadas, es decir, para las que no hubo vacante.

B) Desarrollar un metodo llamado informarDisponibles que muestre por pantalla y para cada turno cual es la sede que tiene mas vacantes disponibles.

C) Desarrollar un metodo llamado informarEstadistica que informe por pantalla la cantidad de solicitudes a procesar que hay para cada sede y zona de residencia. Por ejemplo:

Sede Moron: 
Zona 1: 4 solicitudes
Zona 2: 3 solicitudes
...
Zona 10: 2 solicitudes
Sede San Justo:
Zona 1: 15 solicitudes
Zona 2: 8 solicitudes
...
Zona 10: 5 solicitudes

Y asi sucesivamente para todas las sedes y zonas.